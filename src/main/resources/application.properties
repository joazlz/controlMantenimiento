# we don't need SSL here, let's disable it to have a more compact native executable
quarkus.ssl.native=false

quarkus.datasource.db-kind=postgresql

quarkus.hibernate-orm.sql-load-script=import.sql

quarkus.hibernate-search-orm.elasticsearch.version=7
quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy=sync

%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/quarkus_test
%prod.quarkus.datasource.username=quarkus_test
%prod.quarkus.datasource.password=quarkus_test
%prod.quarkus.hibernate-orm.database.generation=create
%prod.hibernate-search-orm.elasticsearch.hosts=localhost:9200

# # ----NUEVO
# # Azure AD > Admin > App registrations > Your app > Application (client) ID
# quarkus.oidc.client-id=4ecb0b45-ac11-40db-aecb-bac2c8eb5487

# # Azure AD > Admin > App registrations > Your app > Certificates & secrets > Client secrets > Value

# Regular web app with server side rendering
quarkus.oidc.application-type=web-app
# quarkus.oidc.token-state-manager.encryption-required=false
quarkus.oidc.token-state-manager.split-tokens=true

# Azure AD does not support redirect URIs with wildcards, so we'll use /. Remember to add http://localhost:8080
# and the deployed URL of your webapp in Azure AD > Admin > App registrations > Your app > Redirect URIs
quarkus.oidc.authentication.redirect-path=/
quarkus.oidc.authentication.restore-path-after-redirect=true

# Get profile and email info as claims
quarkus.oidc.authentication.scopes=profile email

# Azure AD stores your app roles in a claim called /roles, not /groups
quarkus.oidc.roles.role-claim-path=roles

# Increase logging to aid debugging
quarkus.log.category."io.quarkus.oidc".min-level=TRACE
quarkus.log.category."io.quarkus.oidc".level=TRACE
